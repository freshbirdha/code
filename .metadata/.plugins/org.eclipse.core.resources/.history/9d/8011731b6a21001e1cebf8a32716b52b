package mvcServlet;

import java.io.InputStream;
import java.util.HashMap;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;




/**
 * 业务控制器xml的解析器
 * @author USER
 *
 */

public class ActionXmlParser {
	
	private HashMap<String, Action> actions;
	
	//解析actions.xml
	public HashMap<String, Action> parse(InputStream is) throws Exception{
		
		actions = new HashMap<String,Action>();
		
		SAXParser parser = SAXParserFactory.newInstance().newSAXParser();
		
		parser.parse(is, new DefaultHandler(){
			private Action action = null;
			
			@Override
			public void startElement(String uri, String localName, String qName, Attributes attributes)
					throws SAXException {
				if("action".equals(qName)) {
					action = new Action();
					action.setPath(attributes.getValue("path"));
					action.setName(attributes.getValue("name"));
					
					action.setResults(new HashMap<>());
					
				}else if("result".equals(qName)) {
					
					
					String redirect = attributes.getValue("redirect");
					
				
					Result result = new Result(attributes.getValue("name"),
							
							attributes.getValue("path"),
							
							redirect==null ? false : Boolean.parseBoolean(redirect));
					
					//System.out.println(result.getName());	
					action.getResults().put(result.getName(), result);				 
				
									
		
				}
				
			}
			
			@Override
			public void endElement(String uri, String localName, String qName) throws SAXException {
				if("action".equals(qName)) {
					actions.put(action.getPath(), action);
					action = null;
				}
			}
			
		});
		
		
		
		return actions;  //解析结果
		
		
	}
	
	
	
	
	
	
	
	
	//对应<action>标签
	public static class Action{
		private String path;
		private String name;
		private String dataType;
		private HashMap<String, Result> results;
		
		public String getPath() {
			return path;
		}
		public void setPath(String path) {
			this.path = path;
		}
		public String getName() {
			return name;
		}
		public void setName(String name) {
			this.name = name;
		}
		public HashMap<String, Result> getResults() {
			return results;
		}
		public void setResults(HashMap<String, Result> results) {
			this.results = results;
		}
		public Action() {
			super();
		}
		public String getDataType() {
			return dataType;
		}
		public void setDataType(String dataType) {
			this.dataType = dataType;
		}
		
		
		
	}
	
	//对应<result>标签
	public static class Result{
		private String name;
		private String path;
		private boolean redirect;
		
		
		
		public Result(String name, String path, boolean redirect) {
			super();
			this.name = name;
			this.path = path;
			this.redirect = redirect;
		}
		public Result() {
			super();
		}
		public String getName() {
			return name;
		}
		public void setName(String name) {
			this.name = name;
		}
		public String getPath() {
			return path;
		}
		public void setPath(String path) {
			this.path = path;
		}
		public boolean isRedirect() {
			return redirect;
		}
		public void setRedirect(boolean redirect) {
			this.redirect = redirect;
		}
		
		
		
	}
}
